<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Junda Ong]]></title>
  <link href="http://samwize.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://samwize.com/"/>
  <updated>2013-02-16T20:24:59+08:00</updated>
  <id>http://samwize.com/</id>
  <author>
    <name><![CDATA[Junda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Code Change Needed in iOS 6]]></title>
    <link href="http://samwize.com/2013/02/01/code-change-needed-in-ios-6/"/>
    <updated>2013-02-01T00:03:00+08:00</updated>
    <id>http://samwize.com/2013/02/01/code-change-needed-in-ios-6</id>
    <content type="html"><![CDATA[<p>Some tips on your iOS code change needed for supporting iOS 6.</p>

<!-- more -->


<h2>presentModalViewController</h2>

<p>Starting from iOS 6, <code>UIViewController</code> deprecated this:</p>

<pre><code>- (void)presentModalViewController:(UIViewController *)modalViewController animated:(BOOL)animated
</code></pre>

<p>Starting from iOS 5, the replacement is:</p>

<pre><code>- (void)presentViewController:(UIViewController *)viewControllerToPresent animated: (BOOL)flag completion:(void (^)(void))completion
</code></pre>

<p>If you <em>really</em> need to support the older iOS 4 and below, and mix in the new replacement, you would need to <a href="http://stackoverflow.com/questions/12445190/dismissmodalviewcontrolleranimated-deprecated">check</a> using <code>respondsToSelector</code>.</p>

<pre><code>if ([self respondsToSelector:@selector(presentViewController:animated:completion:)])
    [self presentViewController:navController animated:YES completion:nil];
else
    [self presentModalViewController:navController animated:YES];
</code></pre>

<h2>For older xib</h2>

<h3>Tab Bar not working</h3>

<p>If after adding support for iOS6 and your UITabBar is not working anymore eg. does not respond to taps, it could be due to the xib from an older project.</p>

<p>You <a href="http://stackoverflow.com/a/12627117/242682">need</a> to set the <code>window</code> object of your main xib to <strong>Full Size at Launch</strong>.</p>

<h3>Error: UIViewControllerHierarchyInconsistency</h3>

<p>This is again due to an older project.</p>

<p>You <a href="http://stackoverflow.com/questions/12434937/uiviewcontrollerhierarchyinconsistency-when-trying-to-present-a-modal-view-contr/12450770#12450770">need</a> to do this:</p>

<ol>
<li><p>Move main <strong>View</strong> out of <strong>View Controller</strong>:</p></li>
<li><p>Delete <strong>View Controller</strong> from the XIB (it is not necessary since File's Owner should be of its Class already)</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to replicate iOS Crash feedback from Apple]]></title>
    <link href="http://samwize.com/2013/01/22/how-to-replicate-ios-crash-feedback-from-apple/"/>
    <updated>2013-01-22T00:00:00+08:00</updated>
    <id>http://samwize.com/2013/01/22/how-to-replicate-ios-crash-feedback-from-apple</id>
    <content type="html"><![CDATA[<p>If you submit an iOS app to Apple, and they get back to you with the unfortunate news that your app crashed.. you have to (of course) fix the bug and resubmit again.</p>

<p>To help you, Apple engineers will</p>

<ul>
<li>explain how they did it,</li>
<li>attach a screenshot, and</li>
<li>attach a crashlog</li>
</ul>


<p>This is what you should do.</p>

<!-- more -->


<p>Open Xcode > Organizer > Devices > Library > Device Logs > select <strong>Import</strong> at the bottom to open the crashlog file. This will <a href="https://developer.apple.com/library/ios/#technotes/tn2008/tn2151.html">symobolicate</a> the crash report and let you know which line of code failed.</p>

<p>If you still do not understand why, you could install the same IPA into your device.</p>

<p>To do so, in Xcode > Organizer > Archives > Your app > Distribute > <a href="http://developer.apple.com/library/ios/#qa/qa1764/_index.html">Save for Enterprise or Ad-Hoc Deployment</a>, double click and sync with iTunes. Your device will now run the same copy that you submitted to Apple.</p>

<p>Hopefully, you can then squash the bug.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Developer Tips 2013]]></title>
    <link href="http://samwize.com/2013/01/18/ios-developer-tips-2013/"/>
    <updated>2013-01-18T21:47:00+08:00</updated>
    <id>http://samwize.com/2013/01/18/ios-developer-tips-2013</id>
    <content type="html"><![CDATA[<p>If you are starting out iOS development, there are some good tips for you from Stuart Hall:</p>

<p><a href="http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today">http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today</a></p>

<p>There is only one point which I don't agree on:</p>

<blockquote><p>Story Boards Are Just For Rapid Prototypes</p></blockquote>

<!-- more -->


<p>The choice between "Story Boards" vs "Code the UI" depends very much on your app requirements.</p>

<p>For simple apps that use the stock UI components, Story Board is really useful because</p>

<ol>
<li><p>Drag and drop to design = very quick and easy to make UI changes</p></li>
<li><p>Support Auto Layout easily = Design iPad and iPhone at the same time easily</p></li>
<li><p>Xcode support = Beautiful UI is possible with powerful customizable features</p></li>
</ol>


<p>In each version of iOS, Apple has made Story Board (XIB) and Xcode support much better. They kept improving. They value Story Board.</p>

<p>Hence, you will be missing out a lot if you didn't even bother trying it out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Devices Cheat Sheet]]></title>
    <link href="http://samwize.com/2013/01/11/ios-devices-cheat-sheet/"/>
    <updated>2013-01-11T23:21:00+08:00</updated>
    <id>http://samwize.com/2013/01/11/ios-devices-cheat-sheet</id>
    <content type="html"><![CDATA[<p>Not long ago, I posted about <a href="http://samwize.com/2012/10/29/ios-guide-to-multiple-device-resolutions/">a guide to iOS multiple devices resolutions</a>.</p>

<p>There is a similar, but more complete <a href="http://ivomynttinen.com/blog/the-ios-design-cheat-sheet-volume-2/">cheat sheet</a> from Ivo.</p>

<p>Here is 1 of the table:</p>

<p><img class="center" src="/images/ios-device-resolutions.png"></p>

<p>For the other guides on display PPI, icons size and other iOS design elements, refer to the <a href="http://ivomynttinen.com/blog/the-ios-design-cheat-sheet-volume-2/">cheat sheet</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable NSZombie for Debugging Crashes]]></title>
    <link href="http://samwize.com/2012/12/07/enable-nszombie-for-debugging-crashes/"/>
    <updated>2012-12-07T23:50:00+08:00</updated>
    <id>http://samwize.com/2012/12/07/enable-nszombie-for-debugging-crashes</id>
    <content type="html"><![CDATA[<p>I posted a tip before on how you can <a href="http://blog.just2us.com/2012/02/find-the-real-exception-in-xcode-debugger/">find the real cause of exception in Xcode</a>.</p>

<p>There is another feature which you can enable to help in debugging.</p>

<p><code>NSZombie</code> is an option that helps to trace overreleasing of objects.</p>

<!-- more -->


<p>Sometimes you might encounter exceptions <code>objc_msgSend</code>, which no matter how many times you Continue, an exception is thrown. That is a good sign get help from the zombie.</p>

<p>To enable, go to Product > Edit Scheme > Diagnostics, and check <strong>Enable Zombie Objects</strong>.</p>

<p>Run and debug again, and more meaningful info of what was deallocated wrongly will be shown.</p>
]]></content>
  </entry>
  
</feed>
