<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Junda Ong]]></title>
  <link href="http://samwize.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://samwize.com/"/>
  <updated>2013-06-13T21:45:14+08:00</updated>
  <id>http://samwize.com/</id>
  <author>
    <name><![CDATA[Junda]]></name>
    <email><![CDATA[junda@just2us.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Remember to enable iAd for new iOS apps after uploading binary]]></title>
    <link href="http://samwize.com/2013/06/12/remember-to-enable-iad-for-new-ios-apps-after-uploading-binary/"/>
    <updated>2013-06-12T01:16:00+08:00</updated>
    <id>http://samwize.com/2013/06/12/remember-to-enable-iad-for-new-ios-apps-after-uploading-binary</id>
    <content type="html"><![CDATA[<p>You can enable iAd network ONLY when your app is in an editable state. That is after uploading binary and before being approved.</p>

<p>If not, you can't.</p>

<p><img class="center" src="/images/enable-iads-when-app-is-in-editable-state.png"></p>

<p>I am not sure how many developers forgot to enable iAd. But I am one. And I blatantly forgot to enable 1 app for over a year.. (I also use Admob, Mopub, MMedia, etc)</p>

<p>Why can't we just flick the switch?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fix cocoapod error: the platform of the target pods is not compatible]]></title>
    <link href="http://samwize.com/2013/06/09/fix-cocoapod-error-the-platform-of-the-target-pods-is-not-compatible/"/>
    <updated>2013-06-09T22:46:00+08:00</updated>
    <id>http://samwize.com/2013/06/09/fix-cocoapod-error-the-platform-of-the-target-pods-is-not-compatible</id>
    <content type="html"><![CDATA[<p>While using <a href="http://cocoapods.org/">Cocoapod</a> and running <code>pod install</code>, I encountered the following error:</p>

<pre><code>[!] The platform of the target `Pods` (iOS 4.3) is not compatible with `FlatUIKit (1.1)` which has a minimum requirement of iOS 5.0.
</code></pre>

<!-- more -->


<p>There is obviously a dependency error. Immediately, I open Xcode, go to Project Building Settings, and changed <strong>iOS Deployment Target</strong> to 5.0. I was pretty sure that is the way to change the minimum deployment version.</p>

<p>However, running the command gives me the same error.</p>

<p>I was puzzled. Did I set it wrongly in Xcode? I started to question myself..</p>

<p>After some probing, I realized it is Cocoapod's <a href="https://github.com/CocoaPods/CocoaPods/issues/603">fault</a>.</p>

<p>You have to write in <code>Podfile</code> your minimum deployment version eg.</p>

<p><code>
platform :ios, '5.0'
pod 'FlatUIKit', '~&gt; 1.1'
</code></p>

<p>If you don't specify '5.0', it is taken to be '4.3'. Duh.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using OpenCV to match template multiple times]]></title>
    <link href="http://samwize.com/2013/06/09/using-opencv-to-match-template-multiple-times/"/>
    <updated>2013-06-09T02:15:00+08:00</updated>
    <id>http://samwize.com/2013/06/09/using-opencv-to-match-template-multiple-times</id>
    <content type="html"><![CDATA[<p>OpenCV has a <a href="http://opencv.itseez.com/modules/imgproc/doc/object_detection.html?highlight=matchtemplate#matchtemplate">matchTemplate</a> function that let you seach for matches between an image and a given template.</p>

<!-- more -->


<p>There is a <a href="http://docs.opencv.org/doc/tutorials/imgproc/histograms/template_matching/template_matching.html#template-matching">tutorial</a> on that.</p>

<p>However, the tutorial falls short. It only explain how to match 1 occurence.</p>

<p>I know the answer is somewhere in the <code>result</code>.. But I am a newbie and cannot figure out. Do are <a href="http://answers.opencv.org/question/11180/template-matching-with-multiple-occurance/">others</a>.</p>

<p>I found the best answer from: <a href="http://opencv-code.com/quick-tips/how-to-handle-template-matching-with-multiple-occurences/">OpenCV-Code.com</a></p>

<p>The genius part of the code is that it finds a match with <code>minMaxLoc</code>, then it <code>floodFill</code> it. Then it can repeat.</p>

<p>I have used it for an iOS project to count the number of matching templates. Here's the code:</p>

<p>```cpp
// Returns number of matching templates
+ (int)matchTemplate:(UIImage<em>)templateImage in:(UIImage</em>)src {</p>

<pre><code>// http://opencv-code.com/quick-tips/how-to-handle-template-matching-with-multiple-occurences/
cv::Mat ref = [src CVMat];
cv::Mat tpl = [templateImage CVMat];
cv::Mat gref, gtpl;
cv::cvtColor(ref, gref, CV_BGR2GRAY);
cv::cvtColor(tpl, gtpl, CV_BGR2GRAY);

cv::Mat res(ref.rows-tpl.rows+1, ref.cols-tpl.cols+1, CV_32FC1);
cv::matchTemplate(gref, gtpl, res, CV_TM_CCOEFF_NORMED);
cv::threshold(res, res, 0.9, 1., CV_THRESH_TOZERO);

int count = 0;
while (true)
{
    double minval, maxval, threshold = 0.9;
    cv::Point minloc, maxloc;
    cv::minMaxLoc(res, &amp;minval, &amp;maxval, &amp;minloc, &amp;maxloc);

    if (maxval &gt;= threshold)
    {
        cv::rectangle(
                      ref,
                      maxloc,
                      cv::Point(maxloc.x + tpl.cols, maxloc.y + tpl.rows),
                      CV_RGB(0,255,0), 2
                      );
        cv::floodFill(res, maxloc, cv::Scalar(0), 0, cv::Scalar(.1), cv::Scalar(1.));
        count++;
    }
    else
        break;
}

NSLog(@"# of matches: %d", count);

return count;
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[armv7s build for tesseract and opencv2]]></title>
    <link href="http://samwize.com/2013/06/08/armv7s-build-for-tesseract-and-opencv2/"/>
    <updated>2013-06-08T00:07:00+08:00</updated>
    <id>http://samwize.com/2013/06/08/armv7s-build-for-tesseract-and-opencv2</id>
    <content type="html"><![CDATA[<p>Tesseract is the OCR engine that helps to recoginze text. Google now maintains <a href="https://code.google.com/p/tesseract-ocr/wiki/ReadMe">the project</a>.</p>

<p>You can use Tesseract on iOS too.</p>

<p>I <a href="https://github.com/samwize/iPhone-OCR-Tesseract-and-OpenCV">forked</a> the github project because the <a href="https://github.com/pablosproject/iPhone-OCR-Tesseract-and-OpenCV">original</a> has a couple of problems compiling. To be precise:</p>

<pre><code>File is universal (three slices), but it does not contain a(n) ARMv7-s slice for ..
</code></pre>

<!-- more -->


<p>This is because the original project was 10 months ago, and did not support for armv7s (iPhone 5). You can <a href="http://www.galloway.me.uk/2012/09/hacking-up-an-armv7s-library/">hack</a> a build by yourself.</p>

<p>But I have fixed that for both tesseract libs and also updated opencv2 libs.</p>

<p>For your convenience: <a href="https://github.com/samwize/iPhone-OCR-Tesseract-and-OpenCV">https://github.com/samwize/iPhone-OCR-Tesseract-and-OpenCV</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is the replacement for iOS UDID?]]></title>
    <link href="http://samwize.com/2013/04/26/what-is-the-replacement-for-ios-udid/"/>
    <updated>2013-04-26T00:11:00+08:00</updated>
    <id>http://samwize.com/2013/04/26/what-is-the-replacement-for-ios-udid</id>
    <content type="html"><![CDATA[<p>Apple has long announced <code>uniqueIdentifier</code> UDIDs would be deprecated. From 1st May 2013, Apple will reject apps that use the deprecated identifier.</p>

<p>So what you have do?</p>

<p>DoubleEncore has writtern a good article on the <a href="http://www.doubleencore.com/2013/04/unique-identifiers/">other ways to generate UDID</a>. It is up to you and your use case.</p>

<p>For me, <a href="https://github.com/ylechelle/OpenUDID">OpenUDID</a> is the nearest replacement. The only difference is that it cannot persist the identifier if there is a system reset.</p>
]]></content>
  </entry>
  
</feed>
