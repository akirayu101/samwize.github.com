<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Junda Ong]]></title>
  <link href="http://samwize.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://samwize.com/"/>
  <updated>2012-12-15T22:41:56+08:00</updated>
  <id>http://samwize.com/</id>
  <author>
    <name><![CDATA[Junda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Enable NSZombie for Debugging Crashes]]></title>
    <link href="http://samwize.com/2012/12/07/enable-nszombie-for-debugging-crashes/"/>
    <updated>2012-12-07T23:50:00+08:00</updated>
    <id>http://samwize.com/2012/12/07/enable-nszombie-for-debugging-crashes</id>
    <content type="html"><![CDATA[<p>I posted a tip before on how you can <a href="http://blog.just2us.com/2012/02/find-the-real-exception-in-xcode-debugger/">find the real cause of exception in Xcode</a>.</p>

<p>There is another feature which you can enable to help in debugging.</p>

<p><code>NSZombie</code> is an option that helps to trace overreleasing of objects.</p>

<!-- more -->


<p>Sometimes you might encounter exceptions <code>objc_msgSend</code>, which no matter how many times you Continue, an exception is thrown. That is a good sign get help from the zombie.</p>

<p>To enable, go to Product > Edit Scheme > Diagnostics, and check <strong>Enable Zombie Objects</strong>.</p>

<p>Run and debug again, and more meaningful info of what was deallocated wrongly will be shown.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[7 iOS Custom Popup Views]]></title>
    <link href="http://samwize.com/2012/12/06/7-ios-custom-popup-views/"/>
    <updated>2012-12-06T21:38:00+08:00</updated>
    <id>http://samwize.com/2012/12/06/7-ios-custom-popup-views</id>
    <content type="html"><![CDATA[<p>I was researching on popup/modal views to use, and finally decided on <a href="https://github.com/rnystrom/RNBlurModalView">RNBlurModalView</a>, which has a nicer blurred background effect.</p>

<p>Nonetheless, others are good depending on your use.</p>

<p>Here are 7 custom popup views for iOS:</p>

<!-- more -->


<h2><a href="https://github.com/coneybeare/UAModalPanel">UAModalPanel: Simple dismissiable popup</a></h2>

<p><img src="https://github.com/coneybeare/UAModalPanel/raw/master/_README_ASSETS/UAModalPanel.jpg"></p>

<h2><a href="https://github.com/rnystrom/RNBlurModalView">RNBlurModalView: With a blurred background</a></h2>

<p><img src="https://github.com/rnystrom/RNBlurModalView/raw/master/images/image.jpg"></p>

<h2><a href="https://github.com/martinjuhasz/MJPopupViewController">MJPopupViewController: With different transition effects</a></h2>

<p><img src="https://raw.github.com/martinjuhasz/MJPopupViewController/master/assets/demo2.png"></p>

<h2><a href="http://www.mobilebricks.com/ios/alpopupview">ALPopupView: Facebook-like popup</a> ($19)</h2>

<p><img src="http://iosmix.com/sites/default/files/styles/default/public/full_1185_0.png"></p>

<h2><a href="http://www.50pixels.com/blog/labs/open-library-fppopover-ipad-like-popovers-for-iphone/">FPPopover: iPad-like popovers for iPhone</a></h2>

<p><img src="http://www.50pixels.com/blog/wp-content/uploads/2012/05/framedscreenshot11.png"></p>

<h2><a href="https://github.com/PaulSolt/WEPopover">WEPopover: Another iPad-like popover</a></h2>

<p><img src="https://a248.e.akamai.net/camo.github.com/1f240a003f5d854c5400f9001ca9b35084185281/687474703a2f2f7061756c736f6c742e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031312f30342f6950686f6e652e6a7067"></p>

<h2><a href="https://github.com/chrismiles/CMPopTipView">CMPopTipView: Bubble Tooltip</a></h2>

<p><img src="https://a248.e.akamai.net/camo.github.com/d953577314aafa7c65d1eb3b15f7fd73c9946d1e/687474703a2f2f6661726d352e7374617469632e666c69636b722e636f6d2f343030352f353139313634313033305f326239336134613535392e6a7067"></p>

<h2><a href="https://github.com/scalessec/Toast">Android-like Toast</a></h2>

<p>PS: I created <a href="https://github.com/samwize/JDToaster">JDToaster 2 years ago</a>, which unfortunately I didn't update..</p>

<p><img src="https://a248.e.akamai.net/camo.github.com/3b536e7781bd1d4bc3c409dd460ef6a10d99e3ce/687474703a2f2f692e696d6775722e636f6d2f6f4d32386c2e706e67"></p>

<h2><a href="https://github.com/m1entus/WCAlertView">WCAlertView: UIALertView with blocks</a></h2>

<p><img src="https://raw.github.com/m1entus/WCAlertView/master/Screens/7thumb.png"></p>

<h2><a href="https://github.com/gpambrozio/BlockAlertsAnd-ActionSheets">UIAlertView and UIActionSheet with blocks</a></h2>

<p><img src="https://a248.e.akamai.net/camo.github.com/945fddfea4fd0fd04729eef08e616fcb270475a0/687474703a2f2f626c6f672e636f646563726f707065722e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031322f30312f694f532d53696d756c61746f722d53637265656e2d73686f742d4a616e2d32302d323031322d342e32382e31382d504d2d323030783330302e706e67"></p>

<h2>Cocoacontrols - for more popups!</h2>

<p><a href="http://www.cocoacontrols.com/search?utf8=%E2%9C%93&amp;q=popup">http://www.cocoacontrols.com/search?utf8=%E2%9C%93&amp;q=popup</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips on making iOS App Icons]]></title>
    <link href="http://samwize.com/2012/11/26/tips-on-making-ios-app-icons/"/>
    <updated>2012-11-26T23:42:00+08:00</updated>
    <id>http://samwize.com/2012/11/26/tips-on-making-ios-app-icons</id>
    <content type="html"><![CDATA[<p>Making a beautiful iOS app icon takes some hard work. Even more work now that there are more devices with different resolutions.</p>

<p>This post is to provide some of the tips in the making Apple's trademarked iPhone rounded icon.</p>

<!-- more -->


<h2>Understanding the resolutions</h2>

<p>There is quite a number of different resolutions that is needed for 1 app.</p>

<p>Refer to this <a href="http://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/IconsImages/IconsImages.html#//apple_ref/doc/uid/TP40006556-CH14-SW1">Apple document</a>.</p>

<p>Note that every icon can be different in terms of how it looks. So in theory you can have a 57x57 that is totally different looking from your 512x512.</p>

<h2>Icon Template</h2>

<p>There are many template around. The most popular (now) is from <a href="http://appicontemplate.com/">http://appicontemplate.com/</a>.</p>

<p>Using Photoshop smart objects, the template let you edit the biggest size, and it will automatically scale down to the smaller sizes, and export them automatically.</p>

<h2>Rounded corner radius</h2>

<p>If you are not using the template or need a specific resolution, it is important that you know the rounded corner radius for each of the icon reolution. This <a href="http://stackoverflow.com/a/10239376/242682">discussion</a> explained well.</p>

<p>To summarize,</p>

<blockquote><p>Rounded corner radius = icon length x 10/57</p></blockquote>

<p>That is,</p>

<ul>
<li>Icon512.png - 512px - 89.825</li>
<li>Icon.png - 57px - 10</li>
<li>Icon@2x.png - 114px - 20</li>
<li>Icon-72.png - 72px - 12.632</li>
<li>Icon-72@2x.png - 144px - 25.263</li>
<li>Icon-Small.png - 29px - 5.088</li>
<li>Icon-Small@2x.png - 58px - 10.175</li>
</ul>


<h2>Mask</h2>

<p>You can get a set of mask from within Xcode.</p>

<p>Open the following directory.</p>

<pre><code>open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/MobileIcons.framework
</code></pre>

<p>But there is also a <a href="http://stackoverflow.com/a/1834558/242682">way</a> to programmatically set a round corner masking:</p>

<p>```objc</p>

<pre><code>imageView.layer.cornerRadius = 10.0;
imageView.layer.masksToBounds = YES;
imageView.layer.borderColor = [UIColor lightGrayColor].CGColor;
imageView.layer.borderWidth = 1.0;
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WARNING: Do not use Base Internationalization in iOS 5]]></title>
    <link href="http://samwize.com/2012/11/22/warning-do-not-use-base-internationalization-in-ios-5/"/>
    <updated>2012-11-22T21:57:00+08:00</updated>
    <id>http://samwize.com/2012/11/22/warning-do-not-use-base-internationalization-in-ios-5</id>
    <content type="html"><![CDATA[<p>iOS 5 does NOT support Base Internationalization.</p>

<p>I learnt this the hard way (and partly Apple's fault).</p>

<p>After upgrading my project to use Base Internationalization, I release a new version, and shortly, my users complained of startup crash.</p>

<!-- more -->


<h2>New release, crash on startup</h2>

<p>You might be wondering:</p>

<blockquote><p>Didn't you test your app?</p></blockquote>

<p>I did test, <strong>but only with Simulator</strong>. I ran on Simulator with iOS 5, and also tested on my real device with iOS 6.0.</p>

<p>It didn't crash on Simulator with iOS 5.</p>

<p>However, on a real iPhone with iOS 5, it crashed on startup.</p>

<p>Exception is raised from <code>[UINib instantiateWithOwner:options:]</code>, with the error log:</p>

<pre><code>Terminating app due to uncaught exception 'NSInternalInconsistencyException', 
reason: 'Could not load NIB in bundle: 'NSBundle 
&lt;/var/mobile/Applications/***/***.app&gt; (loaded)' with name 'MainWindow''
</code></pre>

<p>This <a href="http://stackoverflow.com/questions/9075298/app-works-on-simulator-but-not-on-iphone">meant</a> that the app could not find <code>MainWindow.xib</code>.</p>

<p>It is strange that the xib is not copied, especially when I am prudent to do clean build and run.</p>

<h2>The culprit</h2>

<p>Base Internationalization was introduced in iOS 6. It is an awesome feature because: instead of having N NIB files for N languages, you need just <strong>1 base NIB file</strong> with <strong>N localization.strings</strong>.</p>

<p>The biggest change I had for the release was Base Internationalization.</p>

<p>Researching into the problem, I realized Base Internationalization is supported only from iOS 6.</p>

<p>Xcode will let you release the app with <em>any minimum deployment target</em>, without any warning. But once the app starts and load a xib, it will crash as it can't find the xib.</p>

<h2>The Solution</h2>

<p>The change is reversible.</p>

<p>Select the XIB and look under File Inspector.</p>

<p>You can change each of the <code>localization.strings</code> back to XIB. Then remove the Base (when prompted, copied it to English).</p>

<h2>Lessons Learnt</h2>

<ul>
<li><p>Simulator is not exactly like real device</p></li>
<li><p>Base Internationalization is awesome, but is not advised to be used</p></li>
<li><p>Many users stick with iOS 5 because of Map app. Perhaps they will upgrade in ~2014 as Apple continues to improve.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Adhoc Distribution with the new Xcode]]></title>
    <link href="http://samwize.com/2012/11/14/ios-adhoc-distribution-with-the-new-xcode/"/>
    <updated>2012-11-14T22:00:00+08:00</updated>
    <id>http://samwize.com/2012/11/14/ios-adhoc-distribution-with-the-new-xcode</id>
    <content type="html"><![CDATA[<p>If you are an iOS developer, you are probably familiar with the 3 ways to install an app - Run/debug on device, Ad hoc distribution, and App Store distribution.</p>

<p>For each of the 3 ways, Apple provisioning portal has provided the provisioning certs you must use to sign the binary.</p>

<p><strong>Adhoc distribution</strong> is the most complicated (the other 2 ways are very straight forward). Over the years, the process has also changed.</p>

<p>This post is for development with Xcode 4.5.</p>

<!-- more -->


<h2>In the past</h2>

<p>In the early days (year 2008), the guide to Adhoc distribution was to create a new build configuration called "Adhoc", in addition to "Debug" and "Release".</p>

<p>I know why it is necessary back then, but that is not necessary now. But some posts still <a href="http://diaryofacodemonkey.ruprect.com/2011/03/18/ad-hoc-app-distribution-with-xcode-4/">insisted</a> that.</p>

<h2>The new way</h2>

<p>With Xcode 4.5 (or perhaps earlier), Project Schemes is introduced. It provides more ways you can configure how you "Build", "Run", "Test", "Analyse" and "Archive". You can change the build configuration to "Debug" or "Release" as you wanted.</p>

<p>You don't need to touch them.</p>

<p>To distribute Adhoc way, you only need to "Archive".</p>

<p>Then in Organizer, click on the "Distribute" button, and select "Save for Enterprise or Ad-Hoc Deployment".</p>

<p>Select the Adhoc provisioning cert (you would need to download from Apple portal, and install to Xcode).</p>

<p><img src="/images/xcode-distribute-adhoc-enterprise.png" title="Adhoc Distribution" ></p>

<p>Save the <code>App.ipa</code>.</p>

<p>To install, drag to iTunes and sync. That's it!</p>

<h2>Push Notification</h2>

<p>Things get slightly more complicated if you are using Apple Push Notifications.</p>

<p>To use push, there are 2 more certs needed for your server to communicate with Apple. One is <code>aps-development</code>, the other is <code>aps-production</code>.</p>

<p>You use <code>aps-development</code> for running on device using "Debug" build configuration.</p>

<p>You use <code>aps-production</code> for both Adhoc and App Store distribution.</p>

<p>Not the other way round. Adhoc distributed apps will NOT get push when you use <code>aps-development</code>.</p>

<p>Why?</p>

<blockquote><p>Because Adhoc distributed apps will register device token to <strong>Apple production gateway</strong>, while your <code>aps-development</code> communicates with <strong>Apple sandbox gateway</strong>.</p></blockquote>

<p>If you want Adhoc distributed apps to get push, you must send the push with <code>aps-production</code>. Adhoc is as good as production app, yet not on the App Store.</p>

<h2>Conclusion</h2>

<p>In the past, you need to create a new build configuration call "Adhoc". But that is no longer needed as you can select which cert to re-sign after archiving.</p>

<p>I will not cover wireless distribution today (though you may refer to <a href="http://blog.just2us.com/2010/12/wireless-ad-hoc-distribution-for-iphone-apps/">this method using dropbox</a>).</p>

<p>Or you could use <a href="https://testflightapp.com/">TestFlight</a> which is the best in distributing ad hoc builds - with versioning and beta users management!</p>
]]></content>
  </entry>
  
</feed>
