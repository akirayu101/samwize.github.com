<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Junda Ong]]></title>
  <link href="http://samwize.com/atom.xml" rel="self"/>
  <link href="http://samwize.com/"/>
  <updated>2013-06-09T02:25:29+08:00</updated>
  <id>http://samwize.com/</id>
  <author>
    <name><![CDATA[Junda]]></name>
    <email><![CDATA[junda@just2us.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using OpenCV to match template multiple times]]></title>
    <link href="http://samwize.com/2013/06/09/using-opencv-to-match-template-multiple-times/"/>
    <updated>2013-06-09T02:15:00+08:00</updated>
    <id>http://samwize.com/2013/06/09/using-opencv-to-match-template-multiple-times</id>
    <content type="html"><![CDATA[<p>OpenCV has a <a href="http://opencv.itseez.com/modules/imgproc/doc/object_detection.html?highlight=matchtemplate#matchtemplate">matchTemplate</a> function that let you seach for matches between an image and a given template.</p>

<!-- more -->


<p>There is a <a href="http://docs.opencv.org/doc/tutorials/imgproc/histograms/template_matching/template_matching.html#template-matching">tutorial</a> on that.</p>

<p>However, the tutorial falls short. It only explain how to match 1 occurence.</p>

<p>I know the answer is somewhere in the <code>result</code>.. But I am a newbie and cannot figure out. Do are <a href="http://answers.opencv.org/question/11180/template-matching-with-multiple-occurance/">others</a>.</p>

<p>I found the best answer from: <a href="http://opencv-code.com/quick-tips/how-to-handle-template-matching-with-multiple-occurences/">OpenCV-Code.com</a></p>

<p>The genius part of the code is that it finds a match with <code>minMaxLoc</code>, then it <code>floodFill</code> it. Then it can repeat.</p>

<p>I have used it for an iOS project to count the number of matching templates. Here&#8217;s the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">// Returns number of matching templates</span>
</span><span class='line'><span class="o">+</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="nl">matchTemplate:</span><span class="p">(</span><span class="n">UIImage</span><span class="o">*</span><span class="p">)</span><span class="n">templateImage</span> <span class="nl">in:</span><span class="p">(</span><span class="n">UIImage</span><span class="o">*</span><span class="p">)</span><span class="n">src</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// http://opencv-code.com/quick-tips/how-to-handle-template-matching-with-multiple-occurences/</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">ref</span> <span class="o">=</span> <span class="p">[</span><span class="n">src</span> <span class="n">CVMat</span><span class="p">];</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">tpl</span> <span class="o">=</span> <span class="p">[</span><span class="n">templateImage</span> <span class="n">CVMat</span><span class="p">];</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">gref</span><span class="p">,</span> <span class="n">gtpl</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">ref</span><span class="p">,</span> <span class="n">gref</span><span class="p">,</span> <span class="n">CV_BGR2GRAY</span><span class="p">);</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">tpl</span><span class="p">,</span> <span class="n">gtpl</span><span class="p">,</span> <span class="n">CV_BGR2GRAY</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="n">res</span><span class="p">(</span><span class="n">ref</span><span class="p">.</span><span class="n">rows</span><span class="o">-</span><span class="n">tpl</span><span class="p">.</span><span class="n">rows</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">ref</span><span class="p">.</span><span class="n">cols</span><span class="o">-</span><span class="n">tpl</span><span class="p">.</span><span class="n">cols</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">CV_32FC1</span><span class="p">);</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">matchTemplate</span><span class="p">(</span><span class="n">gref</span><span class="p">,</span> <span class="n">gtpl</span><span class="p">,</span> <span class="n">res</span><span class="p">,</span> <span class="n">CV_TM_CCOEFF_NORMED</span><span class="p">);</span>
</span><span class='line'>    <span class="n">cv</span><span class="o">::</span><span class="n">threshold</span><span class="p">(</span><span class="n">res</span><span class="p">,</span> <span class="n">res</span><span class="p">,</span> <span class="mf">0.9</span><span class="p">,</span> <span class="mf">1.</span><span class="p">,</span> <span class="n">CV_THRESH_TOZERO</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="kc">true</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="kt">double</span> <span class="n">minval</span><span class="p">,</span> <span class="n">maxval</span><span class="p">,</span> <span class="n">threshold</span> <span class="o">=</span> <span class="mf">0.9</span><span class="p">;</span>
</span><span class='line'>        <span class="n">cv</span><span class="o">::</span><span class="n">Point</span> <span class="n">minloc</span><span class="p">,</span> <span class="n">maxloc</span><span class="p">;</span>
</span><span class='line'>        <span class="n">cv</span><span class="o">::</span><span class="n">minMaxLoc</span><span class="p">(</span><span class="n">res</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">minval</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">maxval</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">minloc</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">maxloc</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">maxval</span> <span class="o">&gt;=</span> <span class="n">threshold</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">cv</span><span class="o">::</span><span class="n">rectangle</span><span class="p">(</span>
</span><span class='line'>                          <span class="n">ref</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">maxloc</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">cv</span><span class="o">::</span><span class="n">Point</span><span class="p">(</span><span class="n">maxloc</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">tpl</span><span class="p">.</span><span class="n">cols</span><span class="p">,</span> <span class="n">maxloc</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">tpl</span><span class="p">.</span><span class="n">rows</span><span class="p">),</span>
</span><span class='line'>                          <span class="n">CV_RGB</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span> <span class="mi">2</span>
</span><span class='line'>                          <span class="p">);</span>
</span><span class='line'>            <span class="n">cv</span><span class="o">::</span><span class="n">floodFill</span><span class="p">(</span><span class="n">res</span><span class="p">,</span> <span class="n">maxloc</span><span class="p">,</span> <span class="n">cv</span><span class="o">::</span><span class="n">Scalar</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="mi">0</span><span class="p">,</span> <span class="n">cv</span><span class="o">::</span><span class="n">Scalar</span><span class="p">(</span><span class="mf">.1</span><span class="p">),</span> <span class="n">cv</span><span class="o">::</span><span class="n">Scalar</span><span class="p">(</span><span class="mf">1.</span><span class="p">));</span>
</span><span class='line'>            <span class="n">count</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="err">@</span><span class="s">&quot;# of matches: %d&quot;</span><span class="p">,</span> <span class="n">count</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">count</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[armv7s build for tesseract and opencv2]]></title>
    <link href="http://samwize.com/2013/06/08/armv7s-build-for-tesseract-and-opencv2/"/>
    <updated>2013-06-08T00:07:00+08:00</updated>
    <id>http://samwize.com/2013/06/08/armv7s-build-for-tesseract-and-opencv2</id>
    <content type="html"><![CDATA[<p>Tesseract is the OCR engine that helps to recoginze text. Google now maintains <a href="https://code.google.com/p/tesseract-ocr/wiki/ReadMe">the project</a>.</p>

<p>You can use Tesseract on iOS too.</p>

<p>I <a href="https://github.com/samwize/iPhone-OCR-Tesseract-and-OpenCV">forked</a> the github project because the <a href="https://github.com/pablosproject/iPhone-OCR-Tesseract-and-OpenCV">original</a> has a couple of problems compiling. To be precise:</p>

<pre><code>File is universal (three slices), but it does not contain a(n) ARMv7-s slice for ..
</code></pre>

<!-- more -->


<p>This is because the original project was 10 months ago, and did not support for armv7s (iPhone 5). You can <a href="http://www.galloway.me.uk/2012/09/hacking-up-an-armv7s-library/">hack</a> a build by yourself.</p>

<p>But I have fixed that for both tesseract libs and also updated opencv2 libs.</p>

<p>For your convenience: <a href="https://github.com/samwize/iPhone-OCR-Tesseract-and-OpenCV">https://github.com/samwize/iPhone-OCR-Tesseract-and-OpenCV</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extract YouTube Video Links - Github Project]]></title>
    <link href="http://samwize.com/2013/06/06/extract-youtube-video-links-github-project/"/>
    <updated>2013-06-06T22:17:00+08:00</updated>
    <id>http://samwize.com/2013/06/06/extract-youtube-video-links-github-project</id>
    <content type="html"><![CDATA[<p>I have create <a href="https://github.com/samwize/youtube-parser">youtube-parser</a>, a small node.js app to extract youtube video links from Youtube.com.</p>

<p>You can find out <a href="http://www.just2me.com/2013/06/how-i-downloaded-100-full-house-youtube.html">why</a> I need that..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Show hidden files in Finder for Mountain Lion]]></title>
    <link href="http://samwize.com/2013/05/27/show-hidden-files-in-finder-for-mountain-lion/"/>
    <updated>2013-05-27T22:20:00+08:00</updated>
    <id>http://samwize.com/2013/05/27/show-hidden-files-in-finder-for-mountain-lion</id>
    <content type="html"><![CDATA[<p>You can show hidden files in Finder on your Mountain Lion (or any Mac OS).</p>

<p>On Terminal, run this:</p>

<pre><code>defaults write com.apple.Finder AppleShowAllFiles YES
</code></pre>

<!-- more -->


<p>Right click on Finder, and select Relaunch.</p>

<p>Voila!</p>

<p>Simlarly, to hide the files in Finder, run this:</p>

<pre><code>defaults write com.apple.Finder AppleShowAllFiles NO
</code></pre>

<h2>Bonus: Find all the big files</h2>

<p>One of the reason to show the hidden files is to find all the big files that occupy your disk space.</p>

<p>An easy way is use Finder Search.</p>

<ul>
<li><p>Hit Command+F in Finder to bring up the search.</p></li>
<li><p>Click on Others > File Size</p></li>
<li><p>Enter the search criteria eg. greater than 1MB</p></li>
</ul>


<p><img class="center" src="http://cdn.osxdaily.com/wp-content/uploads/2012/04/find-large-files-mac.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find all .git in a directory]]></title>
    <link href="http://samwize.com/2013/05/26/find-all-git-in-a-directory/"/>
    <updated>2013-05-26T22:02:00+08:00</updated>
    <id>http://samwize.com/2013/05/26/find-all-git-in-a-directory</id>
    <content type="html"><![CDATA[<p>To find all the git repositories in a directory, you can run the following command (which search for the <code>.git</code> directories):</p>

<pre><code>find . -type d -name .git
</code></pre>

<!-- more -->


<p>It is using the <code>find</code> command, with the type directory, and name <code>.git</code>.</p>

<p>If you want to delete them, you can do this:</p>

<pre><code>find . -type d -name .git | xargs rm -rf
</code></pre>

<p>PS: The <code>find</code> command has a <code>-delete</code> option, but that somehow doesn&#8217;t work with directory.</p>

<h2>Remove all .DS_Store and .gitignore</h2>

<p>If you are like me who wants to clean up a directory with all the git stuff and send to a possibly Windows user, you could run these:</p>

<pre><code>find . -name '*.DS_Store' -type f -delete
find . -name '.gitignore' -type f -delete
</code></pre>

<p>The <code>-delete</code> option works for the files.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Theme for Octopress]]></title>
    <link href="http://samwize.com/2013/05/23/new-theme-for-octopress/"/>
    <updated>2013-05-23T23:44:00+08:00</updated>
    <id>http://samwize.com/2013/05/23/new-theme-for-octopress</id>
    <content type="html"><![CDATA[<p>I have changed the classic Octopress theme to this cleaner greyshade theme by <a href="http://shashankmehta.in/archive/2012/greyshade.html">Shashank Mehta</a>.</p>

<p>This is how you can install:</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git submodule add git@github.com:shashankmehta/greyshade.git .themes/greyshade
</span><span class='line'>$ git submodule update --init
</span><span class='line'>$ echo "\$greyshade: #1DBE49;" &gt;&gt; sass/custom/_colors.scss
</span><span class='line'>$ rake "install[greyshade]"</span></code></pre></td></tr></table></div></figure>


<p>Note that the <a href="https://github.com/shashankmehta/greyshade#readme">only condition</a> from the author is that you use a unique highlight color. In the above, my highlight color is <code>#1DBE49</code> (my kind of green).</p>

<p>After installing, I entered my <code>email</code> in <code>_config.yml</code> which is needed to show the profile pic (via Gravatar).</p>

<p>With that, here are screenshots of the old vs new:</p>

<p><img class="center" src="http://samwize.com/images/theme-classic.png"></p>

<p><img class="center" src="http://samwize.com/images/theme-greyshade.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where is global gitignore?]]></title>
    <link href="http://samwize.com/2013/05/12/where-is-global-gitignore/"/>
    <updated>2013-05-12T14:59:00+08:00</updated>
    <id>http://samwize.com/2013/05/12/where-is-global-gitignore</id>
    <content type="html"><![CDATA[<p>I made a commit to a git repos and broke the build.</p>

<p>(I should be punished to clean the toilet for a week for accidents like this)</p>

<p>But what happened was unexpected, because I added a framework (Crashlytics), and I thought the library will be pushed fine to the repos.</p>

<p>What I didn&#8217;t expect was that my GLOBAL gitignore has an entry for Crashlytics framework.</p>

<p>For developers who didn&#8217;t know, other than the project gitignore file, there is also a global file for your machine.</p>

<p>It is at <code>~/.gitignore_global</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android use-feature element is case sensitive]]></title>
    <link href="http://samwize.com/2013/05/09/android-use-feature-element-is-case-sensitive/"/>
    <updated>2013-05-09T22:12:00+08:00</updated>
    <id>http://samwize.com/2013/05/09/android-use-feature-element-is-case-sensitive</id>
    <content type="html"><![CDATA[<p>In the previous post, I discussed about how to <a href="http://samwize.com/2013/05/07/why-an-android-app-is-not-supported-for-a-particular-device/">Google Play manage compatibility</a> between your app and devices.</p>

<p>The key is to make <code>use-feature</code> optional.</p>

<p>Recently, I have encountered another problem which I want to share.</p>

<p>I have this in my manifest file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-feature</span> <span class="na">android:name=</span><span class="s">&quot;android.hardware.TELEPHONY&quot;</span> <span class="na">android:required=</span><span class="s">&quot;false&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>On first look, it seems ok. Making TELEPHONY optional will make the app compatible with tablet (a common solution).</p>

<p>However, the above is WRONG! Because it should be <code>android.hardware.telephony</code> (lower case)!</p>

<p>I made a mistake.</p>

<p>But I also blame Android, because for permission, it is upper case! <code>android.permission.INTERNET</code> is correct.</p>

<p>Weirdedness of Android..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why an Android app is not supported for a particular device?]]></title>
    <link href="http://samwize.com/2013/05/07/why-an-android-app-is-not-supported-for-a-particular-device/"/>
    <updated>2013-05-07T22:46:00+08:00</updated>
    <id>http://samwize.com/2013/05/07/why-an-android-app-is-not-supported-for-a-particular-device</id>
    <content type="html"><![CDATA[<p>This is what happend to my Android app.</p>

<p>It works well when I install and test on my Lenovo IdeaPad Tablet (it could be any other device).</p>

<p>But after I upload the APK to Google Play Store, I could not find the app using the tablet!</p>

<!-- more -->


<p>After researching, I realized it is to do with the features and permissions declared in the manifest file. Google Play has <a href="http://developer.android.com/google/play/filters.html">filtering</a>.</p>

<p>The documentation that you must read is on the <a href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html#market-feature-filtering">uses-feature element</a>.</p>

<p>Key takeaway:</p>

<ul>
<li><p>If you don&#8217;t use a feature, you must EXPLICITLY say that <code>required=false</code>!</p></li>
<li><p><a href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html#permissions">Permissions imply Features</a></p></li>
</ul>


<p>Android has grown complex.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is the replacement for iOS UDID?]]></title>
    <link href="http://samwize.com/2013/04/26/what-is-the-replacement-for-ios-udid/"/>
    <updated>2013-04-26T00:11:00+08:00</updated>
    <id>http://samwize.com/2013/04/26/what-is-the-replacement-for-ios-udid</id>
    <content type="html"><![CDATA[<p>Apple has long announced <code>uniqueIdentifier</code> UDIDs would be deprecated. From 1st May 2013, Apple will reject apps that use the deprecated identifier.</p>

<p>So what you have do?</p>

<p>DoubleEncore has writtern a good article on the <a href="http://www.doubleencore.com/2013/04/unique-identifiers/">other ways to generate UDID</a>. It is up to you and your use case.</p>

<p>For me, <a href="https://github.com/ylechelle/OpenUDID">OpenUDID</a> is the nearest replacement. The only difference is that it cannot persist the identifier if there is a system reset.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Developement Refresher 2013]]></title>
    <link href="http://samwize.com/2013/04/24/android-developement-refresher-2013/"/>
    <updated>2013-04-24T23:13:00+08:00</updated>
    <id>http://samwize.com/2013/04/24/android-developement-refresher-2013</id>
    <content type="html"><![CDATA[<p>It has been nearly 3 years since I stopped Android development.</p>

<p>A lot has changed since the days of version 1.6. Now it is 4.x!</p>

<p>Trying to do a little bit of compiling and setting up stuff these days, and I had some hiccups. This is a refresher guide on some topics.</p>

<!-- more -->


<h2>App Signing</h2>

<p>The <a href="http://developer.android.com/tools/publishing/app-signing.html">long guide</a> from Google didn&#8217;t explictly said:</p>

<ul>
<li><p>When you build your app, it will be automatically signed with your <code>debug.keystore</code>, which will be created in <code>/bin/myapp.apk</code>.</p></li>
<li><p>You can take that SIGNED apk and install on any real devices</p></li>
<li><p>Don&#8217;t be <a href="http://stackoverflow.com/q/4835925/242682">confused</a> with <code>Export Unsigned ..</code> option. Even if the device &#8220;allow installation of non-Marketed applciation&#8221;, the apk must be SIGNED</p></li>
<li><p>Linking all up, you can take the SIGNED apk from <code>/bin/myapp.apk</code> and email to your real device to install</p></li>
</ul>


<h2>Maps</h2>

<p>No longer a Map View class.</p>

<p>You have to read the <a href="http://developer.android.com/google/play-services/maps.html">Android guide</a>, and <a href="https://developers.google.com/maps/documentation/android/start#installing_the_google_maps_android_v2_api">setup Google Maps API V2 key</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[s3cmd broken pipe error (errno 32)]]></title>
    <link href="http://samwize.com/2013/04/21/s3cmd-broken-pipe-error-errno-32/"/>
    <updated>2013-04-21T13:26:00+08:00</updated>
    <id>http://samwize.com/2013/04/21/s3cmd-broken-pipe-error-errno-32</id>
    <content type="html"><![CDATA[<p>If you use <a href="http://s3tools.org/s3cmd">s3cmd</a> and encountered <code>[Errno 32] Broken pipe</code> as you try to put an object in a bucket, understand that this is a <em>very very bad error message</em>.</p>

<p><a href="http://jeremyshapiro.com/blog/2011/02/errno-32-broken-pipe-in-s3cmd/">Jeremy</a> blogged about this and attributed the error to <strong>a typo in the bucket name</strong>.</p>

<p>Others attributed it to <strong>no permission</strong>, <strong>file too big</strong>, etc..</p>

<p>I attributed it to <strong>incorrect permission policy</strong>.</p>

<!-- more -->


<p>I was trying to create a new security group, and adding a new user, and restrict his access to only 1 of my S3 bucket. When you create a new security group, you can <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html">edit the policy</a>.</p>

<p>You might change to this, thinking it allows all action on <code>example_bucket</code>:</p>

<figure class='code'><figcaption><span>WRONG Policy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;Statement&quot;</span><span class="p">:[{</span>
</span><span class='line'>     <span class="nt">&quot;Effect&quot;</span><span class="p">:</span><span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="nt">&quot;Action&quot;</span><span class="p">:</span><span class="s2">&quot;*&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="nt">&quot;Resource&quot;</span><span class="p">:</span><span class="s2">&quot;arn:aws:s3:::example_bucket&quot;</span>
</span><span class='line'>   <span class="p">}]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You are wrong (though I say Amazon and it&#8217;s documentation to blame).</p>

<p>The <a href="http://stackoverflow.com/a/6955864/242682">correct way</a> is to have multiple statements like this:</p>

<figure class='code'><figcaption><span>Correct Policy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;s3:ListBucket&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetBucketLocation&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:ListBucketMultipartUploads&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:s3:::example_bucket&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Condition&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;s3:AbortMultipartUpload&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:DeleteObject&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:DeleteObjectVersion&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObject&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObjectAcl&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObjectVersion&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObjectVersionAcl&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:PutObject&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:PutObjectAcl&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:PutObjectAclVersion&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:s3:::example_bucket/*&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Condition&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You need to split into 2 resources.</p>

<ol>
<li><p><code>arn:aws:s3:::example_bucket</code> - allow to list objects in the bucket</p></li>
<li><p><code>arn:aws:s3:::example_bucket/*</code> - allow to Get/Put/etc the objects in the bucket</p></li>
</ol>


<p>It&#8217;s subtle..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate mongodb data from Dotcloud to MongoLab]]></title>
    <link href="http://samwize.com/2013/04/17/migrate-mongodb-data-from-dotcloud-to-mongolab/"/>
    <updated>2013-04-17T02:50:00+08:00</updated>
    <id>http://samwize.com/2013/04/17/migrate-mongodb-data-from-dotcloud-to-mongolab</id>
    <content type="html"><![CDATA[<p>Similar to how you <a href="http://samwize.com/2013/04/01/transfer-away-dotcloud-data-using-ftp/">transfer data away from Dotcloud</a>, you can do the same for your mongodb database.</p>

<p>I have been moving away from Dotcloud as they no longer provide free sandbox app.</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// ssh into mongo db instance first
</span><span class='line'>dot cloud run db
</span><span class='line'>
</span><span class='line'>// dump the data, then transfer via ftp
</span><span class='line'>mongodump -h mongo.MYAPP.dotcloud.com:MYPORT -u root -p MYPASSWORD -d MYDBNAME
</span><span class='line'>tar -czf MYDBNAME.tgz dump
</span><span class='line'>curl -u myftpusername:myftppassword -sST MYDBNAME.tgz ftp://myftpdomain.com</span></code></pre></td></tr></table></div></figure>


<p>I use FTP, but if you prefer S3, you could do <a href="http://icodesnip.com/snippet/bash/dotcloud-mongodb-backup-script">this</a>.</p>

<p>Download the tgz and unzip to get a dump directory.</p>

<p>Create a database in mongolab.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// On local machine, do a mongorestore to mongolab
</span><span class='line'>mongorestore -h xxx037077.mongolab.com:37077 -d MYDBNAME -u root -p MYPASSWORD2 dump/MYAPP/</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Transfer Away Dotcloud Data using FTP]]></title>
    <link href="http://samwize.com/2013/04/01/transfer-away-dotcloud-data-using-ftp/"/>
    <updated>2013-04-01T23:41:00+08:00</updated>
    <id>http://samwize.com/2013/04/01/transfer-away-dotcloud-data-using-ftp</id>
    <content type="html"><![CDATA[<p>If you have data on Dotcloud server that you want to transfer away via FTP directly, you can&#8217;t, because Dotcloud don&#8217;t provide FTP to the instances.</p>

<p>This is about the best way I know of transfering data, first by transferring to your own FTP server:</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// SSH to your dotcloud instance
</span><span class='line'>dotcloud run www
</span><span class='line'>
</span><span class='line'>// ZIP the data eg. html
</span><span class='line'>tar -C $HOME -czf html.tar.gz ./current/html
</span><span class='line'>
</span><span class='line'>// curl
</span><span class='line'>curl -u myusername:mypassword -sST html.tar.gz ftp://myserver.com</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to run iOS 4.3 Simulator on Mountain Lion?]]></title>
    <link href="http://samwize.com/2013/03/29/how-to-run-ios-4-dot-3-simulator-on-mountain-lion/"/>
    <updated>2013-03-29T15:23:00+08:00</updated>
    <id>http://samwize.com/2013/03/29/how-to-run-ios-4-dot-3-simulator-on-mountain-lion</id>
    <content type="html"><![CDATA[<p>You can&#8217;t.</p>

<p>This is a <a href="http://stackoverflow.com/questions/11651773/install-simulator-sdk-4-3-to-xcode-4-4-on-mountain-lion">Mountain Lion issue</a>. Apple somehow broke it, and so even if you manage to download and install the simulator, you can&#8217;t run it.</p>

<p>Apple recommend you to test on a real device.</p>

<p>I&#8217;m sorry.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clean install iMac on Mountain Lion]]></title>
    <link href="http://samwize.com/2013/03/27/clean-install-imac-on-mountain-lion/"/>
    <updated>2013-03-27T21:54:00+08:00</updated>
    <id>http://samwize.com/2013/03/27/clean-install-imac-on-mountain-lion</id>
    <content type="html"><![CDATA[<p>I posted about how I <a href="http://samwize.com/2013/02/14/migrating-old-mac-to-new-mac/">migrate an old Mac to a new Mac</a> in a previous post.</p>

<p>After migration, I also wanted to do a clean install on the old Mac, and bring it to factory settings, but with the latest OS X (Mountain Lion for me).</p>

<p>It is very easy.</p>

<!-- more -->


<blockquote></blockquote>

<p>The steps:</p>

<ul>
<li><p>Restart computer and press <strong>Command + R</strong> while it restart to get to a menu screen</p></li>
<li><p>Select <strong>Disk Utility</strong> > Macintosh HD (your startup volume) > Erase</p></li>
<li><p>Go back to menu screen and select <strong>Install Mac OS X</strong></p></li>
</ul>


<p>Follow through and it will be done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[POST Request to UIWebView]]></title>
    <link href="http://samwize.com/2013/03/15/post-request-to-uiwebview/"/>
    <updated>2013-03-15T01:58:00+08:00</updated>
    <id>http://samwize.com/2013/03/15/post-request-to-uiwebview</id>
    <content type="html"><![CDATA[<p>In the last post, I wrote about <a href="http://samwize.com/2013/03/15/auto-fill-username-and-password-fields-in-uiwebview/">how you can automatically fill in username and password in a UIWebView</a>.</p>

<p>This post, I will teach you how you can automatically login to a <code>UIWebView</code>.</p>

<p>It turns out to be simple if the login uses a simple form POST.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">login</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Setup the URL</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">loginUrl</span> <span class="o">=</span> <span class="s">@&quot;https://just2us.com/login&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">loginUrl</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSMutableURLRequest</span> <span class="o">*</span><span class="n">requestObj</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableURLRequest</span> <span class="nl">requestWithURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// POST the username password</span>
</span><span class='line'>    <span class="p">[</span><span class="n">requestObj</span> <span class="nl">setHTTPMethod:</span><span class="s">@&quot;POST&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">postString</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;username=%@&amp;password=%@&quot;</span><span class="p">,</span> <span class="s">@&quot;samwize&quot;</span><span class="p">,</span> <span class="s">@&quot;secret&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">postString</span> <span class="nl">dataUsingEncoding:</span> <span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">requestObj</span> <span class="nl">setHTTPBody:</span><span class="n">data</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Load the request</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">webview</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">webview</span> <span class="nl">loadRequest:</span><span class="n">requestObj</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto fill Username &amp; Password fields in UIWebView]]></title>
    <link href="http://samwize.com/2013/03/15/auto-fill-username-and-password-fields-in-uiwebview/"/>
    <updated>2013-03-15T01:46:00+08:00</updated>
    <id>http://samwize.com/2013/03/15/auto-fill-username-and-password-fields-in-uiwebview</id>
    <content type="html"><![CDATA[<p>If you use <code>UIWebView</code> and would like to automatically fill in the username and password (or any other text input fields), you could do so by executing Javascript on the webview.</p>

<p>I first learnt about this from <a href="http://stackoverflow.com/a/9722805/242682">stackoverflow</a>, and has edited slightly.</p>

<p>The technique is to implement <a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/intf/UIWebViewDelegate"><code>UIWebViewDelegate</code></a> and execute some Javascript in <code>webViewDidFinishLoad</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">webViewDidFinishLoad:</span><span class="p">(</span><span class="n">UIWebView</span> <span class="o">*</span><span class="p">)</span><span class="nv">webView</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Auto fill the username and password text fields, assuming the HTML has</span>
</span><span class='line'>    <span class="c1">// &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; and</span>
</span><span class='line'>    <span class="c1">// &lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">savedUsername</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">]</span> <span class="nl">objectForKey:</span><span class="s">@&quot;USERNAME&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">savedPassword</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">]</span> <span class="nl">objectForKey:</span><span class="s">@&quot;PASSWORD&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">savedUsername</span><span class="p">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">savedPassword</span><span class="p">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Create js strings</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">loadUsernameJS</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;var inputFields = document.querySelectorAll(</span><span class="se">\&quot;</span><span class="s">input[name=&#39;username&#39;]</span><span class="se">\&quot;</span><span class="s">); \</span>
</span><span class='line'><span class="s">                                    for (var i = inputFields.length &gt;&gt;&gt; 0; i--;) { inputFields[i].value = &#39;%@&#39;;}&quot;</span><span class="p">,</span> <span class="n">savedUsername</span><span class="p">];</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">loadPasswordJS</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;var inputFields = document.querySelectorAll(</span><span class="se">\&quot;</span><span class="s">input[name=&#39;password&#39;]</span><span class="se">\&quot;</span><span class="s">); \</span>
</span><span class='line'><span class="s">                                    for (var i = inputFields.length &gt;&gt;&gt; 0; i--;) { inputFields[i].value = &#39;%@&#39;;}&quot;</span><span class="p">,</span> <span class="n">savedPassword</span><span class="p">];</span>
</span><span class='line'>        <span class="c1">// Runs the JS</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">webview</span> <span class="nl">stringByEvaluatingJavaScriptFromString:</span> <span class="n">loadUsernameJS</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">webview</span> <span class="nl">stringByEvaluatingJavaScriptFromString:</span> <span class="n">loadPasswordJS</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set User Agent for UIWebView]]></title>
    <link href="http://samwize.com/2013/03/14/set-user-agent-for-uiwebview/"/>
    <updated>2013-03-14T23:46:00+08:00</updated>
    <id>http://samwize.com/2013/03/14/set-user-agent-for-uiwebview</id>
    <content type="html"><![CDATA[<p>There is a very easy (but not documented) way to set the User Agent header for HTTP requests sent via <code>UIWebView</code>.</p>

<p>I find saw the solution from <a href="http://www.mphweb.com/en/blog/easily-set-user-agent-uiwebview">mphweb</a>.</p>

<p>Basically, you just set register it with <code>NSUserDefaults</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initialize</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Set user agent (the only problem is that we can&#39;t modify the User-Agent later in the program)</span>
</span><span class='line'>    <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dictionnary</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSDictionary</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithObjectsAndKeys:</span><span class="s">@&quot;Your desired user agent&quot;</span><span class="p">,</span> <span class="s">@&quot;UserAgent&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">]</span> <span class="nl">registerDefaults:</span><span class="n">dictionnary</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">dictionnary</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Queue HTTP Operations with AFNetworking]]></title>
    <link href="http://samwize.com/2013/03/02/queue-http-operations-with-afnetworking/"/>
    <updated>2013-03-02T22:55:00+08:00</updated>
    <id>http://samwize.com/2013/03/02/queue-http-operations-with-afnetworking</id>
    <content type="html"><![CDATA[<p>In a previous post, I wrote about a <a href="http://samwize.com/2012/10/25/simple-get-post-afnetworking/">simple usage of AFNetworking</a>, the de facto HTTP library for iOS.</p>

<p>This post, I will show how you can use AFNetworking to queue multiple HTTP operations. They could be running concurrently, or have dependencies.</p>

<p>Adding dependencies to HTTP operations is especially useful. For example, you can make sure that you fetch a list of resources, then fetch image1, then image2, &#8230;</p>

<!-- more -->


<p>Adding operations to a queue is rather simple.</p>

<p>You will be using <code>NSOperationQueue</code>, which is part of Apple&#8217;s <a href="http://developer.apple.com/library/ios/#documentation/cocoa/Reference/NSOperationQueue_class/Reference/Reference.html">Foundation framework</a>.</p>

<p>You will be adding <code>NSOperation</code> to the queue. Not surprisingly, classes such as <code>AFHTTPRequestOperation</code> subclass <code>NSOperation</code>.</p>

<h2>Adding an operation to a queue</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Create a http operation</span>
</span><span class='line'><span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="s">@&quot;http://samwize.com/api/cars/&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSURLRequest</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURLRequest</span> <span class="nl">requestWithURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class='line'><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span> <span class="o">=</span> <span class="p">[[</span><span class="n">AFHTTPRequestOperation</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithRequest:</span><span class="n">request</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">httpClient</span> <span class="nl">registerHTTPOperationClass:</span><span class="p">[</span><span class="n">AFHTTPRequestOperation</span> <span class="n">class</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">operation</span> <span class="nl">setCompletionBlockWithSuccess:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="kt">id</span> <span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Print the response body in text</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Response: %@&quot;</span><span class="p">,</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithData:</span><span class="n">responseObject</span> <span class="nl">encoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Error: %@&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Add the operation to a queue</span>
</span><span class='line'><span class="c1">// It will start once added</span>
</span><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">operationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">addOperation:</span><span class="n">operation</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, it is just 2 more lines of code.</p>

<h2>Adding multiple operations and run them concurrently</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">operationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Set the max number of concurrent operations (threads)</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">setMaxConcurrentOperationCount:</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">addOperations:</span><span class="err">@</span><span class="p">[</span><span class="n">operation1</span><span class="p">,</span> <span class="n">operation2</span><span class="p">,</span> <span class="n">operation3</span><span class="p">]</span> <span class="nl">waitUntilFinished:</span><span class="n">NO</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Adding Dependencies</h2>

<p>Let&#8217;s say we have 2 operations, and we want <code>operation2</code> to start only after <code>operation1</code> has finish.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">operationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Make operation2 depend on operation1</span>
</span><span class='line'><span class="p">[</span><span class="n">operation2</span> <span class="nl">addDependency:</span><span class="n">operation1</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">addOperations:</span><span class="err">@</span><span class="p">[</span><span class="n">operation1</span><span class="p">,</span> <span class="n">operation2</span><span class="p">,</span> <span class="n">operation3</span><span class="p">]</span> <span class="nl">waitUntilFinished:</span><span class="n">NO</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
