<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Junda Ong]]></title>
  <link href="http://samwize.com/atom.xml" rel="self"/>
  <link href="http://samwize.com/"/>
  <updated>2013-05-07T22:55:09+08:00</updated>
  <id>http://samwize.com/</id>
  <author>
    <name><![CDATA[Junda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why an Android app is not supported for a particular device?]]></title>
    <link href="http://samwize.com/2013/05/07/why-an-android-app-is-not-supported-for-a-particular-device/"/>
    <updated>2013-05-07T22:46:00+08:00</updated>
    <id>http://samwize.com/2013/05/07/why-an-android-app-is-not-supported-for-a-particular-device</id>
    <content type="html"><![CDATA[<p>This is what happend to my Android app.</p>

<p>It works well when I install and test on my Lenovo IdeaPad Tablet (it could be any other device).</p>

<p>But after I upload the APK to Google Play Store, I could not find the app using the tablet!</p>

<!-- more -->


<p>After researching, I realized it is to do with the features and permissions declared in the manifest file.</p>

<p>The documentation that you must read is on the <a href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html#market-feature-filtering">uses-feature element</a>.</p>

<p>Key takeaway:</p>

<ul>
<li><p>If you don&#8217;t use a feature, you must EXPLICITLY say that <code>required=false</code>!</p></li>
<li><p><a href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html#permissions">Permissions imply Features</a></p></li>
</ul>


<p>Android has grown complex.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is the replacement for iOS UDID?]]></title>
    <link href="http://samwize.com/2013/04/26/what-is-the-replacement-for-ios-udid/"/>
    <updated>2013-04-26T00:11:00+08:00</updated>
    <id>http://samwize.com/2013/04/26/what-is-the-replacement-for-ios-udid</id>
    <content type="html"><![CDATA[<p>Apple has long announced <code>uniqueIdentifier</code> UDIDs would be deprecated. From 1st May 2013, Apple will reject apps that use the deprecated identifier.</p>

<p>So what you have do?</p>

<p>DoubleEncore has writtern a good article on the <a href="http://www.doubleencore.com/2013/04/unique-identifiers/">other ways to generate UDID</a>. It is up to you and your use case.</p>

<p>For me, <a href="https://github.com/ylechelle/OpenUDID">OpenUDID</a> is the nearest replacement. The only difference is that it cannot persist the identifier if there is a system reset.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Developement Refresher 2013]]></title>
    <link href="http://samwize.com/2013/04/24/android-developement-refresher-2013/"/>
    <updated>2013-04-24T23:13:00+08:00</updated>
    <id>http://samwize.com/2013/04/24/android-developement-refresher-2013</id>
    <content type="html"><![CDATA[<p>It has been nearly 3 years since I stopped Android development.</p>

<p>A lot has changed since the days of version 1.6. Now it is 4.x!</p>

<p>Trying to do a little bit of compiling and setting up stuff these days, and I had some hiccups. This is a refresher guide on some topics.</p>

<!-- more -->


<h2>App Signing</h2>

<p>The <a href="http://developer.android.com/tools/publishing/app-signing.html">long guide</a> from Google didn&#8217;t explictly said:</p>

<ul>
<li><p>When you build your app, it will be automatically signed with your <code>debug.keystore</code>, which will be created in <code>/bin/myapp.apk</code>.</p></li>
<li><p>You can take that SIGNED apk and install on any real devices</p></li>
<li><p>Don&#8217;t be <a href="http://stackoverflow.com/q/4835925/242682">confused</a> with <code>Export Unsigned ..</code> option. Even if the device &#8220;allow installation of non-Marketed applciation&#8221;, the apk must be SIGNED</p></li>
<li><p>Linking all up, you can take the SIGNED apk from <code>/bin/myapp.apk</code> and email to your real device to install</p></li>
</ul>


<h2>Maps</h2>

<p>No longer a Map View class.</p>

<p>You have to read the <a href="http://developer.android.com/google/play-services/maps.html">Android guide</a>, and <a href="https://developers.google.com/maps/documentation/android/start#installing_the_google_maps_android_v2_api">setup Google Maps API V2 key</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[s3cmd broken pipe error (errno 32)]]></title>
    <link href="http://samwize.com/2013/04/21/s3cmd-broken-pipe-error-errno-32/"/>
    <updated>2013-04-21T13:26:00+08:00</updated>
    <id>http://samwize.com/2013/04/21/s3cmd-broken-pipe-error-errno-32</id>
    <content type="html"><![CDATA[<p>If you use <a href="http://s3tools.org/s3cmd">s3cmd</a> and encountered <code>[Errno 32] Broken pipe</code> as you try to put an object in a bucket, understand that this is a <em>very very bad error message</em>.</p>

<p><a href="http://jeremyshapiro.com/blog/2011/02/errno-32-broken-pipe-in-s3cmd/">Jeremy</a> blogged about this and attributed the error to <strong>a typo in the bucket name</strong>.</p>

<p>Others attributed it to <strong>no permission</strong>, <strong>file too big</strong>, etc..</p>

<p>I attributed it to <strong>incorrect permission policy</strong>.</p>

<!-- more -->


<p>I was trying to create a new security group, and adding a new user, and restrict his access to only 1 of my S3 bucket. When you create a new security group, you can <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html">edit the policy</a>.</p>

<p>You might change to this, thinking it allows all action on <code>example_bucket</code>:</p>

<figure class='code'><figcaption><span>WRONG Policy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;Statement&quot;</span><span class="p">:[{</span>
</span><span class='line'>     <span class="nt">&quot;Effect&quot;</span><span class="p">:</span><span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="nt">&quot;Action&quot;</span><span class="p">:</span><span class="s2">&quot;*&quot;</span><span class="p">,</span>
</span><span class='line'>     <span class="nt">&quot;Resource&quot;</span><span class="p">:</span><span class="s2">&quot;arn:aws:s3:::example_bucket&quot;</span>
</span><span class='line'>   <span class="p">}]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You are wrong (though I say Amazon and it&#8217;s documentation to blame).</p>

<p>The <a href="http://stackoverflow.com/a/6955864/242682">correct way</a> is to have multiple statements like this:</p>

<figure class='code'><figcaption><span>Correct Policy</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;Statement&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;s3:ListBucket&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetBucketLocation&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:ListBucketMultipartUploads&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:s3:::example_bucket&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Condition&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="nt">&quot;Effect&quot;</span><span class="p">:</span> <span class="s2">&quot;Allow&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Action&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;s3:AbortMultipartUpload&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:DeleteObject&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:DeleteObjectVersion&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObject&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObjectAcl&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObjectVersion&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:GetObjectVersionAcl&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:PutObject&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:PutObjectAcl&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;s3:PutObjectAclVersion&quot;</span>
</span><span class='line'>      <span class="p">],</span>
</span><span class='line'>      <span class="nt">&quot;Resource&quot;</span><span class="p">:</span> <span class="s2">&quot;arn:aws:s3:::example_bucket/*&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">&quot;Condition&quot;</span><span class="p">:</span> <span class="p">{}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You need to split into 2 resources.</p>

<ol>
<li><p><code>arn:aws:s3:::example_bucket</code> - allow to list objects in the bucket</p></li>
<li><p><code>arn:aws:s3:::example_bucket/*</code> - allow to Get/Put/etc the objects in the bucket</p></li>
</ol>


<p>It&#8217;s subtle..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate mongodb data from Dotcloud to MongoLab]]></title>
    <link href="http://samwize.com/2013/04/17/migrate-mongodb-data-from-dotcloud-to-mongolab/"/>
    <updated>2013-04-17T02:50:00+08:00</updated>
    <id>http://samwize.com/2013/04/17/migrate-mongodb-data-from-dotcloud-to-mongolab</id>
    <content type="html"><![CDATA[<p>Similar to how you <a href="http://samwize.com/2013/04/01/transfer-away-dotcloud-data-using-ftp/">transfer data away from Dotcloud</a>, you can do the same for your mongodb database.</p>

<p>I have been moving away from Dotcloud as they no longer provide free sandbox app.</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// ssh into mongo db instance first
</span><span class='line'>dot cloud run db
</span><span class='line'>
</span><span class='line'>// dump the data, then transfer via ftp
</span><span class='line'>mongodump -h mongo.MYAPP.dotcloud.com:MYPORT -u root -p MYPASSWORD -d MYDBNAME
</span><span class='line'>tar -czf MYDBNAME.tgz dump
</span><span class='line'>curl -u myftpusername:myftppassword -sST MYDBNAME.tgz ftp://myftpdomain.com</span></code></pre></td></tr></table></div></figure>


<p>I use FTP, but if you prefer S3, you could do <a href="http://icodesnip.com/snippet/bash/dotcloud-mongodb-backup-script">this</a>.</p>

<p>Download the tgz and unzip to get a dump directory.</p>

<p>Create a database in mongolab.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// On local machine, do a mongorestore to mongolab
</span><span class='line'>mongorestore -h xxx037077.mongolab.com:37077 -d MYDBNAME -u root -p MYPASSWORD2 dump/MYAPP/</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Transfer Away Dotcloud Data using FTP]]></title>
    <link href="http://samwize.com/2013/04/01/transfer-away-dotcloud-data-using-ftp/"/>
    <updated>2013-04-01T23:41:00+08:00</updated>
    <id>http://samwize.com/2013/04/01/transfer-away-dotcloud-data-using-ftp</id>
    <content type="html"><![CDATA[<p>If you have data on Dotcloud server that you want to transfer away via FTP directly, you can&#8217;t, because Dotcloud don&#8217;t provide FTP to the instances.</p>

<p>This is about the best way I know of transfering data, first by transferring to your own FTP server:</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// SSH to your dotcloud instance
</span><span class='line'>dotcloud run www
</span><span class='line'>
</span><span class='line'>// ZIP the data eg. html
</span><span class='line'>tar -C $HOME -czf html.tar.gz ./current/html
</span><span class='line'>
</span><span class='line'>// curl
</span><span class='line'>curl -u myusername:mypassword -sST html.tar.gz ftp://myserver.com</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to run iOS 4.3 Simulator on Mountain Lion?]]></title>
    <link href="http://samwize.com/2013/03/29/how-to-run-ios-4-dot-3-simulator-on-mountain-lion/"/>
    <updated>2013-03-29T15:23:00+08:00</updated>
    <id>http://samwize.com/2013/03/29/how-to-run-ios-4-dot-3-simulator-on-mountain-lion</id>
    <content type="html"><![CDATA[<p>You can&#8217;t.</p>

<p>This is a <a href="http://stackoverflow.com/questions/11651773/install-simulator-sdk-4-3-to-xcode-4-4-on-mountain-lion">Mountain Lion issue</a>. Apple somehow broke it, and so even if you manage to download and install the simulator, you can&#8217;t run it.</p>

<p>Apple recommend you to test on a real device.</p>

<p>I&#8217;m sorry.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clean install iMac on Mountain Lion]]></title>
    <link href="http://samwize.com/2013/03/27/clean-install-imac-on-mountain-lion/"/>
    <updated>2013-03-27T21:54:00+08:00</updated>
    <id>http://samwize.com/2013/03/27/clean-install-imac-on-mountain-lion</id>
    <content type="html"><![CDATA[<p>I posted about how I <a href="http://samwize.com/2013/02/14/migrating-old-mac-to-new-mac/">migrate an old Mac to a new Mac</a> in a previous post.</p>

<p>After migration, I also wanted to do a clean install on the old Mac, and bring it to factory settings, but with the latest OS X (Mountain Lion for me).</p>

<p>It is very easy.</p>

<!-- more -->


<blockquote></blockquote>

<p>The steps:</p>

<ul>
<li><p>Restart computer and press <strong>Command + R</strong> while it restart to get to a menu screen</p></li>
<li><p>Select <strong>Disk Utility</strong> > Macintosh HD (your startup volume) > Erase</p></li>
<li><p>Go back to menu screen and select <strong>Install Mac OS X</strong></p></li>
</ul>


<p>Follow through and it will be done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[POST Request to UIWebView]]></title>
    <link href="http://samwize.com/2013/03/15/post-request-to-uiwebview/"/>
    <updated>2013-03-15T01:58:00+08:00</updated>
    <id>http://samwize.com/2013/03/15/post-request-to-uiwebview</id>
    <content type="html"><![CDATA[<p>In the last post, I wrote about <a href="http://samwize.com/2013/03/15/auto-fill-username-and-password-fields-in-uiwebview/">how you can automatically fill in username and password in a UIWebView</a>.</p>

<p>This post, I will teach you how you can automatically login to a <code>UIWebView</code>.</p>

<p>It turns out to be simple if the login uses a simple form POST.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">login</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Setup the URL</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">loginUrl</span> <span class="o">=</span> <span class="s">@&quot;https://just2us.com/login&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">loginUrl</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSMutableURLRequest</span> <span class="o">*</span><span class="n">requestObj</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableURLRequest</span> <span class="nl">requestWithURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// POST the username password</span>
</span><span class='line'>    <span class="p">[</span><span class="n">requestObj</span> <span class="nl">setHTTPMethod:</span><span class="s">@&quot;POST&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">postString</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;username=%@&amp;password=%@&quot;</span><span class="p">,</span> <span class="s">@&quot;samwize&quot;</span><span class="p">,</span> <span class="s">@&quot;secret&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">postString</span> <span class="nl">dataUsingEncoding:</span> <span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">requestObj</span> <span class="nl">setHTTPBody:</span><span class="n">data</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Load the request</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">webview</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">webview</span> <span class="nl">loadRequest:</span><span class="n">requestObj</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto fill Username &amp; Password fields in UIWebView]]></title>
    <link href="http://samwize.com/2013/03/15/auto-fill-username-and-password-fields-in-uiwebview/"/>
    <updated>2013-03-15T01:46:00+08:00</updated>
    <id>http://samwize.com/2013/03/15/auto-fill-username-and-password-fields-in-uiwebview</id>
    <content type="html"><![CDATA[<p>If you use <code>UIWebView</code> and would like to automatically fill in the username and password (or any other text input fields), you could do so by executing Javascript on the webview.</p>

<p>I first learnt about this from <a href="http://stackoverflow.com/a/9722805/242682">stackoverflow</a>, and has edited slightly.</p>

<p>The technique is to implement <a href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html#//apple_ref/occ/intf/UIWebViewDelegate"><code>UIWebViewDelegate</code></a> and execute some Javascript in <code>webViewDidFinishLoad</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">webViewDidFinishLoad:</span><span class="p">(</span><span class="n">UIWebView</span> <span class="o">*</span><span class="p">)</span><span class="nv">webView</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Auto fill the username and password text fields, assuming the HTML has</span>
</span><span class='line'>    <span class="c1">// &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; and</span>
</span><span class='line'>    <span class="c1">// &lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">savedUsername</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">]</span> <span class="nl">objectForKey:</span><span class="s">@&quot;USERNAME&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">savedPassword</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">]</span> <span class="nl">objectForKey:</span><span class="s">@&quot;PASSWORD&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">savedUsername</span><span class="p">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">savedPassword</span><span class="p">.</span><span class="n">length</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Create js strings</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">loadUsernameJS</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;var inputFields = document.querySelectorAll(</span><span class="se">\&quot;</span><span class="s">input[name=&#39;username&#39;]</span><span class="se">\&quot;</span><span class="s">); \</span>
</span><span class='line'><span class="s">                                    for (var i = inputFields.length &gt;&gt;&gt; 0; i--;) { inputFields[i].value = &#39;%@&#39;;}&quot;</span><span class="p">,</span> <span class="n">savedUsername</span><span class="p">];</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">loadPasswordJS</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;var inputFields = document.querySelectorAll(</span><span class="se">\&quot;</span><span class="s">input[name=&#39;password&#39;]</span><span class="se">\&quot;</span><span class="s">); \</span>
</span><span class='line'><span class="s">                                    for (var i = inputFields.length &gt;&gt;&gt; 0; i--;) { inputFields[i].value = &#39;%@&#39;;}&quot;</span><span class="p">,</span> <span class="n">savedPassword</span><span class="p">];</span>
</span><span class='line'>        <span class="c1">// Runs the JS</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">webview</span> <span class="nl">stringByEvaluatingJavaScriptFromString:</span> <span class="n">loadUsernameJS</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">webview</span> <span class="nl">stringByEvaluatingJavaScriptFromString:</span> <span class="n">loadPasswordJS</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set User Agent for UIWebView]]></title>
    <link href="http://samwize.com/2013/03/14/set-user-agent-for-uiwebview/"/>
    <updated>2013-03-14T23:46:00+08:00</updated>
    <id>http://samwize.com/2013/03/14/set-user-agent-for-uiwebview</id>
    <content type="html"><![CDATA[<p>There is a very easy (but not documented) way to set the User Agent header for HTTP requests sent via <code>UIWebView</code>.</p>

<p>I find saw the solution from <a href="http://www.mphweb.com/en/blog/easily-set-user-agent-uiwebview">mphweb</a>.</p>

<p>Basically, you just set register it with <code>NSUserDefaults</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initialize</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Set user agent (the only problem is that we can&#39;t modify the User-Agent later in the program)</span>
</span><span class='line'>    <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dictionnary</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSDictionary</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithObjectsAndKeys:</span><span class="s">@&quot;Your desired user agent&quot;</span><span class="p">,</span> <span class="s">@&quot;UserAgent&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">]</span> <span class="nl">registerDefaults:</span><span class="n">dictionnary</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">dictionnary</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Queue HTTP Operations with AFNetworking]]></title>
    <link href="http://samwize.com/2013/03/02/queue-http-operations-with-afnetworking/"/>
    <updated>2013-03-02T22:55:00+08:00</updated>
    <id>http://samwize.com/2013/03/02/queue-http-operations-with-afnetworking</id>
    <content type="html"><![CDATA[<p>In a previous post, I wrote about a <a href="http://samwize.com/2012/10/25/simple-get-post-afnetworking/">simple usage of AFNetworking</a>, the de facto HTTP library for iOS.</p>

<p>This post, I will show how you can use AFNetworking to queue multiple HTTP operations. They could be running concurrently, or have dependencies.</p>

<p>Adding dependencies to HTTP operations is especially useful. For example, you can make sure that you fetch a list of resources, then fetch image1, then image2, &#8230;</p>

<!-- more -->


<p>Adding operations to a queue is rather simple.</p>

<p>You will be using <code>NSOperationQueue</code>, which is part of Apple&#8217;s <a href="http://developer.apple.com/library/ios/#documentation/cocoa/Reference/NSOperationQueue_class/Reference/Reference.html">Foundation framework</a>.</p>

<p>You will be adding <code>NSOperation</code> to the queue. Not surprisingly, classes such as <code>AFHTTPRequestOperation</code> subclass <code>NSOperation</code>.</p>

<h2>Adding an operation to a queue</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Create a http operation</span>
</span><span class='line'><span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="s">@&quot;http://samwize.com/api/cars/&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSURLRequest</span> <span class="o">*</span><span class="n">request</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURLRequest</span> <span class="nl">requestWithURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class='line'><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span> <span class="o">=</span> <span class="p">[[</span><span class="n">AFHTTPRequestOperation</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithRequest:</span><span class="n">request</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">httpClient</span> <span class="nl">registerHTTPOperationClass:</span><span class="p">[</span><span class="n">AFHTTPRequestOperation</span> <span class="n">class</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">operation</span> <span class="nl">setCompletionBlockWithSuccess:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="kt">id</span> <span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Print the response body in text</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Response: %@&quot;</span><span class="p">,</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithData:</span><span class="n">responseObject</span> <span class="nl">encoding:</span><span class="n">NSUTF8StringEncoding</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span> <span class="nl">failure:</span><span class="o">^</span><span class="p">(</span><span class="n">AFHTTPRequestOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Error: %@&quot;</span><span class="p">,</span> <span class="n">error</span><span class="p">);</span>
</span><span class='line'><span class="p">}];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Add the operation to a queue</span>
</span><span class='line'><span class="c1">// It will start once added</span>
</span><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">operationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">addOperation:</span><span class="n">operation</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, it is just 2 more lines of code.</p>

<h2>Adding multiple operations and run them concurrently</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">operationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Set the max number of concurrent operations (threads)</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">setMaxConcurrentOperationCount:</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">addOperations:</span><span class="err">@</span><span class="p">[</span><span class="n">operation1</span><span class="p">,</span> <span class="n">operation2</span><span class="p">,</span> <span class="n">operation3</span><span class="p">]</span> <span class="nl">waitUntilFinished:</span><span class="n">NO</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Adding Dependencies</h2>

<p>Let&#8217;s say we have 2 operations, and we want <code>operation2</code> to start only after <code>operation1</code> has finish.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSOperationQueue</span> <span class="o">*</span><span class="n">operationQueue</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSOperationQueue</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="c1">// Make operation2 depend on operation1</span>
</span><span class='line'><span class="p">[</span><span class="n">operation2</span> <span class="nl">addDependency:</span><span class="n">operation1</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">operationQueue</span> <span class="nl">addOperations:</span><span class="err">@</span><span class="p">[</span><span class="n">operation1</span><span class="p">,</span> <span class="n">operation2</span><span class="p">,</span> <span class="n">operation3</span><span class="p">]</span> <span class="nl">waitUntilFinished:</span><span class="n">NO</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sample GET/POST using Google AppEngine Java HttpConnection]]></title>
    <link href="http://samwize.com/2013/02/16/sample-get-slash-post-using-google-appengine-java-httpconnection/"/>
    <updated>2013-02-16T20:26:00+08:00</updated>
    <id>http://samwize.com/2013/02/16/sample-get-slash-post-using-google-appengine-java-httpconnection</id>
    <content type="html"><![CDATA[<p>A sample code on basic usage of HTTP GET/POST is always helpful.</p>

<p>I wrote once for <a href="http://samwize.com/2012/10/25/simple-get-post-afnetworking/">AFNetworking</a> (for iOS), which I subsequently referred to it myself. Hence, I am now writing for Google App Engine (Java).</p>

<p>Google provided <a href="https://developers.google.com/appengine/docs/java/urlfetch/usingjavanet">documentation</a> on http connection, but it is incomplete. Here&#8217;s my version.</p>

<!-- more -->


<h2>GET</h2>

<p>In my example, I want to get a JSON response for a Comment resource.</p>

<p>I showed how I set my custom headers, especially the Content-Type header. Then I read the response body by using <code>BufferedReader</code>, finally parse the string to <code>JSONObject</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="s">&quot;https://api.myserver.com/v1/comments&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">HttpURLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">&quot;X-Custom-Header&quot;</span><span class="o">,</span> <span class="s">&quot;xxx&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">&quot;Content-Type&quot;</span><span class="o">,</span> <span class="s">&quot;application/json&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">connection</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">()</span> <span class="o">==</span> <span class="n">HttpURLConnection</span><span class="o">.</span><span class="na">HTTP_OK</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// OK</span>
</span><span class='line'>        <span class="n">BufferedReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">openStream</span><span class="o">()));</span>
</span><span class='line'>        <span class="n">StringBuffer</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">line</span><span class="o">;</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">reader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">JSONObject</span> <span class="n">jsonObj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">(</span><span class="n">res</span><span class="o">);</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">count</span> <span class="o">=</span> <span class="n">jsonObj</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&quot;count&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Server returned HTTP error code.</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>POST</h2>

<p>Similarly, this is how you POST data.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="s">&quot;https://api.myserver.com/v1/comments&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">HttpURLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">&quot;X-Custom-Header&quot;</span><span class="o">,</span> <span class="s">&quot;xxx&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">&quot;Content-Type&quot;</span><span class="o">,</span> <span class="s">&quot;application/json&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// POST the http body data</span>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">setDoOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">&quot;POST&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">OutputStreamWriter</span> <span class="n">writer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OutputStreamWriter</span><span class="o">(</span><span class="n">connection</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">());</span>
</span><span class='line'>    <span class="n">writer</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">&quot;{\&quot;comment\&quot;: \&quot;awesome tutorial\&quot;}&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">writer</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">connection</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">()</span> <span class="o">==</span> <span class="n">HttpURLConnection</span><span class="o">.</span><span class="na">HTTP_OK</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// OK</span>
</span><span class='line'>        <span class="n">BufferedReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">openStream</span><span class="o">()));</span>
</span><span class='line'>        <span class="n">StringBuffer</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">line</span><span class="o">;</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">res</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">reader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">JSONObject</span> <span class="n">jsonObj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">(</span><span class="n">res</span><span class="o">);</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">count</span> <span class="o">=</span> <span class="n">jsonObj</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&quot;count&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Server returned HTTP error code.</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Pitfalls</h2>

<p>Google AppEngine always append to your <a href="http://stackoverflow.com/questions/13226598/how-to-remove-the-google-app-engine-default-header-when-fetching-a-url">User-Agent header</a>, so as to identify the http request is from a particular AppEngine app. This is a bane because if you are crawling some website, they could easily block you since you can&#8217;t spoof your user-agent.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apple Trackpad 4 finger swipe up/down not working]]></title>
    <link href="http://samwize.com/2013/02/15/apple-trackpad-4-finger-not-working/"/>
    <updated>2013-02-15T00:06:00+08:00</updated>
    <id>http://samwize.com/2013/02/15/apple-trackpad-4-finger-not-working</id>
    <content type="html"><![CDATA[<p>When my new iMac was delivered, the only unsatisfactory I had was with the faulty trackpad. It can click, but can&#8217;t move the cursor at all! I sent it for servicing and got a replacement after a few days.</p>

<p>Anyway, this post isn&#8217;t about a new iMac with a faulty trackpad.</p>

<p>What happened is that when I use the new and working trackpad, I realized the 4 finger swipe up/down gestures were not working (therefore I can&#8217;t do Expose and Mission Control).</p>

<!-- more -->


<p>The fix is rather trivial:</p>

<p>Go to Preferences > Trackpad > More Gestures > Mission Control and change <strong>Swipe up with four fingers</strong> to <strong>Swipe up with three fingers</strong>.</p>

<p>Try it now and it should work.</p>

<p>Now, change it back to <strong>Swipe up with four fingers</strong>, and it works too!</p>

<p>Do the same trick for App Expose.</p>

<p>Finally, go to Point &amp; Click to re-enable <strong>Three Finger Drag</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating old Mac to new Mac]]></title>
    <link href="http://samwize.com/2013/02/14/migrating-old-mac-to-new-mac/"/>
    <updated>2013-02-14T23:29:00+08:00</updated>
    <id>http://samwize.com/2013/02/14/migrating-old-mac-to-new-mac</id>
    <content type="html"><![CDATA[<p>I did a migration using the <strong>Migration Assistant</strong> app when I bought a new iMac (late 2012 27&#8221; model).</p>

<p>I decided to migrate everything (instead of a fresh install) as I DON&#8217;T want to:</p>

<ul>
<li>reinstall hundreds of apps</li>
<li>setup the system preferences</li>
<li>manually transfer files</li>
</ul>


<p>But migration is not perfect (though I think it is much efficient than doing a fresh install).</p>

<p>Here are some tips that you will be interested to know.</p>

<!-- more -->


<h2>1. Create a new user with a different username</h2>

<p>In your new iMac, when you start the OS the first time, it is compulsory for you to create a new user account.</p>

<p>This is temporary. Once you migrated, the account will be deleted.</p>

<p>Don&#8217;t create a user account with the same username as that from the old Mac, as that will cause a conflict, and you have to start over at some point in the migration. This tip could save you 10 minutes.</p>

<h2>2. Transfer medium using cross cable</h2>

<p>This is up to you. For me, I choose to connect the 2 Macs using a cross ethernet cable.</p>

<p>It took 8 hours to migrate nearly 500 GB of data.</p>

<h2>3. Most things are good</h2>

<p>Once migrated, most things are good.</p>

<p>Your applications are there. Your OS settings are intact. Your files are there.</p>

<p>In the next sections, it tells some of the things that were broken.</p>

<h2>4. Dropbox</h2>

<p>Your dropbox folder is there, but it is not synced.</p>

<p>You have to reinstall Dropbox, and they will resync like old times.</p>

<h2>5. Git</h2>

<p>Your <code>git</code> command cannot be recognized. Simply <a href="http://git-scm.com/download/mac">download</a> and install again.</p>

<h2>6. Octopress</h2>

<p>It is best you go through this <a href="http://samwize.com/2012/09/11/how-to-setup-octopress-on-github-pages/">octopress setup guide</a> again.</p>

<p>Explicitly, you do need to install OS X GCC Compiler and bundle install.</p>

<h2>7. Eclipse, and Plugins</h2>

<p>If you open and encounter an error, simply <a href="http://www.eclipse.org/downloads/">reinstall</a>. You need to install Google Plugin for Eclipse too if you are using.</p>

<h2>8. More..</h2>

<p>More to be updated as I use my new iMac :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Change Needed in iOS 6]]></title>
    <link href="http://samwize.com/2013/02/01/code-change-needed-in-ios-6/"/>
    <updated>2013-02-01T00:03:00+08:00</updated>
    <id>http://samwize.com/2013/02/01/code-change-needed-in-ios-6</id>
    <content type="html"><![CDATA[<p>Some tips on your iOS code change needed for supporting iOS 6.</p>

<!-- more -->


<h2>presentModalViewController</h2>

<p>Starting from iOS 6, <code>UIViewController</code> deprecated this:</p>

<pre><code>- (void)presentModalViewController:(UIViewController *)modalViewController animated:(BOOL)animated
</code></pre>

<p>Starting from iOS 5, the replacement is:</p>

<pre><code>- (void)presentViewController:(UIViewController *)viewControllerToPresent animated: (BOOL)flag completion:(void (^)(void))completion
</code></pre>

<p>If you <em>really</em> need to support the older iOS 4 and below, and mix in the new replacement, you would need to <a href="http://stackoverflow.com/questions/12445190/dismissmodalviewcontrolleranimated-deprecated">check</a> using <code>respondsToSelector</code>.</p>

<pre><code>if ([self respondsToSelector:@selector(presentViewController:animated:completion:)])
    [self presentViewController:navController animated:YES completion:nil];
else
    [self presentModalViewController:navController animated:YES];
</code></pre>

<h2>For older xib</h2>

<h3>Tab Bar not working</h3>

<p>If after adding support for iOS6 and your UITabBar is not working anymore eg. does not respond to taps, it could be due to the xib from an older project.</p>

<p>You <a href="http://stackoverflow.com/a/12627117/242682">need</a> to set the <code>window</code> object of your main xib to <strong>Full Size at Launch</strong>.</p>

<h3>Error: UIViewControllerHierarchyInconsistency</h3>

<p>This is again due to an older project.</p>

<p>You <a href="http://stackoverflow.com/questions/12434937/uiviewcontrollerhierarchyinconsistency-when-trying-to-present-a-modal-view-contr/12450770#12450770">need</a> to do this:</p>

<ol>
<li><p>Move main <strong>View</strong> out of <strong>View Controller</strong>:</p></li>
<li><p>Delete <strong>View Controller</strong> from the XIB (it is not necessary since File&#8217;s Owner should be of its Class already)</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to replicate iOS Crash feedback from Apple]]></title>
    <link href="http://samwize.com/2013/01/22/how-to-replicate-ios-crash-feedback-from-apple/"/>
    <updated>2013-01-22T00:00:00+08:00</updated>
    <id>http://samwize.com/2013/01/22/how-to-replicate-ios-crash-feedback-from-apple</id>
    <content type="html"><![CDATA[<p>If you submit an iOS app to Apple, and they get back to you with the unfortunate news that your app crashed.. you have to (of course) fix the bug and resubmit again.</p>

<p>To help you, Apple engineers will</p>

<ul>
<li>explain how they did it,</li>
<li>attach a screenshot, and</li>
<li>attach a crashlog</li>
</ul>


<p>This is what you should do.</p>

<!-- more -->


<p>Open Xcode > Organizer > Devices > Library > Device Logs > select <strong>Import</strong> at the bottom to open the crashlog file. This will <a href="https://developer.apple.com/library/ios/#technotes/tn2008/tn2151.html">symobolicate</a> the crash report and let you know which line of code failed.</p>

<p>If you still do not understand why, you could install the same IPA into your device.</p>

<p>To do so, in Xcode > Organizer > Archives > Your app > Distribute > <a href="http://developer.apple.com/library/ios/#qa/qa1764/_index.html">Save for Enterprise or Ad-Hoc Deployment</a>, double click and sync with iTunes. Your device will now run the same copy that you submitted to Apple.</p>

<p>Hopefully, you can then squash the bug.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Developer Tips 2013]]></title>
    <link href="http://samwize.com/2013/01/18/ios-developer-tips-2013/"/>
    <updated>2013-01-18T21:47:00+08:00</updated>
    <id>http://samwize.com/2013/01/18/ios-developer-tips-2013</id>
    <content type="html"><![CDATA[<p>If you are starting out iOS development, there are some good tips for you from Stuart Hall:</p>

<p><a href="http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today">http://stuartkhall.com/posts/ios-development-tips-i-would-want-if-i-was-starting-out-today</a></p>

<p>There is only one point which I don&#8217;t agree on:</p>

<blockquote><p>Story Boards Are Just For Rapid Prototypes</p></blockquote>

<!-- more -->


<p>The choice between &#8220;Story Boards&#8221; vs &#8220;Code the UI&#8221; depends very much on your app requirements.</p>

<p>For simple apps that use the stock UI components, Story Board is really useful because</p>

<ol>
<li><p>Drag and drop to design = very quick and easy to make UI changes</p></li>
<li><p>Support Auto Layout easily = Design iPad and iPhone at the same time easily</p></li>
<li><p>Xcode support = Beautiful UI is possible with powerful customizable features</p></li>
</ol>


<p>In each version of iOS, Apple has made Story Board (XIB) and Xcode support much better. They kept improving. They value Story Board.</p>

<p>Hence, you will be missing out a lot if you didn&#8217;t even bother trying it out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It takes 18 weeks to build a mobile app]]></title>
    <link href="http://samwize.com/2013/01/14/it-takes-18-weeks-to-build-a-mobile-app/"/>
    <updated>2013-01-14T23:36:00+08:00</updated>
    <id>http://samwize.com/2013/01/14/it-takes-18-weeks-to-build-a-mobile-app</id>
    <content type="html"><![CDATA[<p>This is a <a href="http://www.kinvey.com/blog/2086/how-long-does-it-take-to-build-a-mobile-app">research</a> from surveying 100 mobile developers.</p>

<p></p></p>

<div style="width:600px;background-color:#fff;padding:10px 20px 20px;font:14px/21px HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, sans-serif;">
<h3 style="color:#da5024;clear:both;">How long does it take to make a mobile app?</h3>
<p><a href="http://www.kinvey.com/blog/2086/how-long-does-it-take-to-build-a-mobile-app"><img alt="Kinvey Backend as a Service" src="http://www.kinvey.com/blog/images/2013/01/how-long-does-it-take-to-build-an-app-kinvey.jpg" width="600" /></a></p>
<div style="width:100%;text-align:center;margin-top:5px;">From: <a style="text-decoration:none;color:#da5024;" href="http://www.kinvey.com/blog/2086/how-long-does-it-take-to-build-a-mobile-app">Kinvey Backend as a Service</a></div>
</div>


<p>

<p>Interesting to note is that 18 weeks =</p>
<ul>
<li>time to build 1.3 Boeing 777</li>
<li>time to build 1/231 of Giza Pyramid</li>
<li>time to take Apollo 11 to the moon</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS Devices Cheat Sheet]]></title>
    <link href="http://samwize.com/2013/01/11/ios-devices-cheat-sheet/"/>
    <updated>2013-01-11T23:21:00+08:00</updated>
    <id>http://samwize.com/2013/01/11/ios-devices-cheat-sheet</id>
    <content type="html"><![CDATA[<p>Not long ago, I posted about <a href="http://samwize.com/2012/10/29/ios-guide-to-multiple-device-resolutions/">a guide to iOS multiple devices resolutions</a>.</p>

<p>There is a similar, but more complete <a href="http://ivomynttinen.com/blog/the-ios-design-cheat-sheet-volume-2/">cheat sheet</a> from Ivo.</p>

<p>Here is 1 of the table:</p>

<p><img class="center" src="http://samwize.com/images/ios-device-resolutions.png"></p>

<p>For the other guides on display PPI, icons size and other iOS design elements, refer to the <a href="http://ivomynttinen.com/blog/the-ios-design-cheat-sheet-volume-2/">cheat sheet</a>.</p>
]]></content>
  </entry>
  
</feed>
